{"version":3,"sources":["Components/Filter/Filter.module.css","Redux/Phone/phone_selector.js","Components/Contacts/Contacts.js"],"names":["module","exports","getFilter","state","contacts","filter","createSelector","items","allContacts","normalizedFilter","toLowerCase","name","includes","Filter","dispatch","useDispatch","value","useSelector","className","styles","container","label","input","type","onChange","e","actions","currentTarget"],"mappings":"yIACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,MAAQ,wB,8HCCjFC,EAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,Q,GAEnBC,YAC5B,CAACJ,EAF2B,SAAAC,GAAK,OAAIA,EAAMC,SAASG,SAGpD,SAACF,EAAQG,GACP,IAAMC,EAAmBJ,EAAOK,cAChC,OAAOF,EAAYH,QAAO,qBAAGM,KACtBD,cAAcE,SAASH,S,MCsBnBI,EAxBA,WACb,IAAMC,EAAWC,cAEXC,EAAQC,aAAY,SAAAd,GAAK,OAAID,EAAUC,MAE7C,OACE,qBAAKe,UAAWC,IAAOC,UAAvB,SACE,wBAAOF,UAAWC,IAAOE,MAAzB,iCAEE,uBACEH,UAAWC,IAAOG,MAClBC,KAAK,OACLP,MAAOA,EACPQ,SAXS,SAAAC,GAAC,OAAIX,EAASY,IAAqBD,EAAEE,cAAcX","file":"static/js/contacts.5c62ed74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2WySO\",\"input\":\"Filter_input__1UEH8\",\"label\":\"Filter_label__3DamV\"};","import { createSelector } from 'reselect';\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getAllContacts = state => state.contacts.items;\r\nexport const getUniqContact = createSelector(\r\n  [getFilter, getAllContacts],\r\n  (filter, allContacts) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from '../Filter/Filter.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../../Redux/Phone/phone-actions';\r\nimport { getFilter } from '../../Redux/Phone/phone_selector';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(actions.filterChange(e.currentTarget.value));\r\n  const value = useSelector(state => getFilter(state));\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <label className={styles.label}>\r\n        Find contact by name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n"],"sourceRoot":""}