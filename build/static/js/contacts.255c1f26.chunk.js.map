{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","Components/PhoneBook/FormPhonebook.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Redux/Phone/phone_selector.js","Components/PhoneBook/FormPhonebook.jsx","Redux/Phone/operationApi.js","Components/ContactItem/ContactItem.jsx","Components/Filter/Filter.jsx","Components/Contacts/Contacts.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","filter","item","ind","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","id","RegExp","replace","test","getFilter","state","contacts","getAllContacts","items","getUniqContact","createSelector","allContacts","normalizedFilter","toLowerCase","name","includes","FormPhonebook","dispatch","useDispatch","initialState","useState","setState","nameId","shortid","useSelector","handleChange","e","prev","target","className","styles","form_container","form","onSubmit","preventDefault","some","alert","getState","addContactsRequest","axios","post","then","data","addSuccess","catch","addFailure","addContact","label","htmlFor","input","type","pattern","title","required","onChange","span","btn","ContactItem","onDeleteContact","contactId","deleteContactsRequest","delete","deleteChangeSuccess","error","deleteChangeFailure","contact_list","map","contact_item","contact_item_name","contact_item_tel","contact_btn","onClick","Filter","container","actions","currentTarget","Contacts","useEffect","a","getContactsRequest","getContactsSuccess","getContactsFailure","Section"],"mappings":"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","file":"static/js/contacts.255c1f26.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"FormPhonebook_form_container__2wuXn\",\"form\":\"FormPhonebook_form__n_EW0\",\"input\":\"FormPhonebook_input__3VDA3\",\"label\":\"FormPhonebook_label___gOY2\",\"btn\":\"FormPhonebook_btn__134y9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactItem_contact_list__2QG3X\",\"contact_item_name\":\"ContactItem_contact_item_name__3VM0I\",\"contact_item_tel\":\"ContactItem_contact_item_tel__3yYHX\",\"contact_btn\":\"ContactItem_contact_btn__1jXLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2WySO\",\"input\":\"Filter_input__1UEH8\",\"label\":\"Filter_label__3DamV\"};","import { createSelector } from 'reselect';\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getAllContacts = state => state.contacts.items;\r\nexport const getUniqContact = createSelector(\r\n  [getFilter, getAllContacts],\r\n  (filter, allContacts) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import shortid from 'shortid';\r\nimport { useState } from 'react';\r\nimport styles from './FormPhonebook.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../Redux/Phone/operationApi';\r\nimport { getAllContacts } from '../../Redux/Phone/phone_selector';\r\n\r\nconst FormPhonebook = () => {\r\n  const dispatch = useDispatch();\r\n  const initialState = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const { name, number } = state;\r\n\r\n  const nameId = shortid.generate();\r\n  const items = useSelector(state => getAllContacts(state));\r\n  const handleChange = e => {\r\n    setState(prev => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const sameName = items.some(item => item.name === name);\r\n    if (sameName) {\r\n      window.alert(`LocalHost:3000 says ${name} is already in contact`);\r\n      reset();\r\n      return;\r\n    }\r\n    dispatch(addContact({ name, number }));\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setState(initialState);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.form_container}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label className={styles.label} htmlFor={nameId}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n            id={nameId}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          <span className={styles.span}>Tel</span>\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormPhonebook;\r\n","import {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsFailure,\r\n  addContactsRequest,\r\n  addSuccess,\r\n  addFailure,\r\n  deleteContactsRequest,\r\n  deleteChangeSuccess,\r\n  deleteChangeFailure,\r\n} from './phone-actions';\r\nimport axios from 'axios';\r\n\r\nexport const getContact = () => async dispatch => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(getContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getContactsFailure(error));\r\n  }\r\n};\r\n\r\nexport const addContact = ({ name, number }) => (dispatch, getState) => {\r\n  dispatch(addContactsRequest());\r\n\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(({ data }) => dispatch(addSuccess(data)))\r\n    .catch(err => dispatch(addFailure(err)));\r\n};\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteChangeSuccess(contactId)))\r\n    .catch(error => dispatch(deleteChangeFailure(error)));\r\n};\r\n","import styles from './ContactItem.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from '../../Redux/Phone/operationApi';\r\nimport { getUniqContact } from '../../Redux/Phone/phone_selector';\r\n\r\nconst ContactItem = () => {\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n  const contacts = useSelector(state => getUniqContact(state));\r\n  return (\r\n    <div>\r\n      <ul className={styles.contact_list}>\r\n        {contacts.map(({ name, id, number }) => {\r\n          return (\r\n            <li className={styles.contact_item} key={id}>\r\n              {' '}\r\n              <span className={styles.contact_item_name}>{name}:</span>\r\n              <span className={styles.contact_item_tel}>{number}</span>{' '}\r\n              <button\r\n                type=\"submit\"\r\n                className={styles.contact_btn}\r\n                onClick={() => onDeleteContact(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../../Redux/Phone/phone-actions';\r\nimport { getFilter } from '../../Redux/Phone/phone_selector';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(actions.filterChange(e.currentTarget.value));\r\n  const value = useSelector(state => getFilter(state));\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <label className={styles.label}>\r\n        Find contact by name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getContact } from '../../Redux/Phone/operationApi';\r\n\r\nimport FormPhonebook from '../PhoneBook';\r\nimport ContactItem from '../ContactItem';\r\nimport Filter from '../Filter';\r\nimport Section from '../Section';\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(getContact(), [dispatch]));\r\n\r\n  return (\r\n    <div>\r\n      <FormPhonebook />\r\n      <Filter />\r\n      <Section title=\"Contacts list\">\r\n        <ContactItem />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"],"sourceRoot":""}